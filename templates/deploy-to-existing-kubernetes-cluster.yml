# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '{{ containerRegistryConnection.Id }}'
  imageRepository: '{{#toAlphaNumericString imageRepository 50}}{{/toAlphaNumericString}}'
  containerRegistry: '{{ containerRegistryConnection.Authorization.Parameters.loginServer }}'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: '{{#toAlphaNumericString containerRegistryConnection.Name 50}}{{/toAlphaNumericString}}{{#shortGuid}}{{/shortGuid}}-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  
  {{#if reviewApp}}
  azureServiceConnection: '{{ azureServiceConnection.Id }}'
  k8sNamespaceForPR: '$(System.pullRequest.sourceBranch)'
  k8sNamespace: '{{ k8sResource.Name }}'
  AZDSControllerName: '' # Extract logic to be updated
  AZDSControllerRG: '' # Extract logic to be updated
  {{/if}}

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  {{#if reviewApp}}
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/pull/'))
  {{/if}}
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: '{{ k8sResource.EnvironmentReference.Name }}.{{ k8sResource.Name }}'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

{{#if reviewApp}}
# Deploy all PR changes
- stage: DeployPR
  displayName: Deploy PR review app
  dependsOn: Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/pull/'))
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    pool:
      vmImage: 'ubuntu-latest'
      
    environment: '{{ k8sResource.EnvironmentReference.Name }}.{{ k8sResource.Name }}'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Kubernetes@1
            displayName: 'Create namespace'
            inputs:
              command: create
              arguments: 'ns $(k8sNamespaceForPR)'

          - task: Kubernetes@1
            displayName: 'Add devspace label'
            inputs:
              command: label
              arguments: '--overwrite ns $(k8sNamespaceForPR) azds.io/space=true'

          - task: Kubernetes@1
            displayName: 'Setup root devspace to dev'
            inputs:
              command: label
              arguments: '--overwrite ns $(k8sNamespaceForPR) azds.io/parent-space=$(k8sNamespace)'

          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              namespace: $(k8sNamespaceforpr)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: deploy
            name: deploy
            inputs:
              action: deploy
              namespace: $(k8sNamespaceforpr)
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
          
          - task: AzureCLI@1
            displayName: 'List all review app URLs'
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptLocation: inlineScript
              inlineScript: |
                az aks use-dev-spaces -n $(AZDSControllerName) -g $(AZDSControllerRG) -y -s $(k8sNamespace)/$(k8sNamespaceForPR) --update
                azds up -d
                azds list-uris -o json 
                azds list-uris -o json > $(AGENT.TEMPDIRECTORY)/azdsuri.txt
{{/if}}